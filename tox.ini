############################# flake8 and autopep8 #############################
[flake8]
max-line-length = 79
ignore =
  # line too long handled by pylint
  E501,
  # unused import handled by pylint
  F401,
  # function-redefined handled by pylint
  F811,
  # singleton-comparison handled by pylint
  E712,
  # w503 incompatible with pep8
  W503,
  # line variable before assignment handled by pylint
  F821
show_source = true
statistics = true
exclude =
  .git,
  logs,
  dist,
  .vscode,
  .venv,
  .tox,
  pip-wheel-metadata,
  .mypy-cache,
  .hypothesis,
  **/__pycache__,
  docs/source/conf.py,
  **/*.bkp
  laholio.egg-info,
  data

################################### mypy #####################################
[mypy]
ignore_missing_imports = True
python_version = 3.6



################################## isort #####################################
[isort]
line_length=79
force_single_line=True
sections=FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
no_lines_before=STDLIB,LOCALFOLDER
################################## bandit ####################################
[bandit]
skips=B101
################################### pylint ###################################
[MASTER]

# A comma-separated list of package or module names from where C extensions may
# be loaded. Extensions are loading into the active Python interpreter and may
# run arbitrary code.
extension-pkg-whitelist=pyodbc,pydantic
[MESSAGES CONTROL]
disable =
  # black takes care of C0330. See: https://github.com/python/black/issues/48
  C0330,
  # R0801 does not like imports in init
  R0801
todo = remove

[FORMAT]
# Regexp for a line that is allowed to be longer than the limit.
ignore-long-lines=\s*(# )?<?https?://\S+>?
indent-string = "    "
good-names =
  db,
  es,
  s,
  d,
  e
todo = remove

[MISCELLANEOUS]
# List of note tags to take in consideration, separated by a comma.
notes=
  FIXME,
  ; TODO,
  ; BUG,
  ; NOBUG,
  ; REQ,
  ; RFE,
  ; IDEA,
  ; WTF,
  ; ALERT,
  ; HACK,
  ; PORT,
  ; CAVEAT,
  ; NOTE,
  ; REF,
  ; TODOC,
  ; CRED
todo = remove

############################### tox-specific ##################################
[tox]
envilist = format, lint, flake8, mypy, bandit, pylint
skipsdist = True
skip_install = True

[testenv]
skip_install = True
whitelist_externals = poetry
                      python
envdir = {toxinidir}/.venv
basepython = python3.6 
commands =
  python -c \
    "from pathlib import Path ; \
    from shutil import rmtree ; \
    rmtree(Path('pip-wheel-metadata'), ignore_errors=True) ; \
    rmtree(Path('laholio.egg-info'), ignore_errors=True) ; \
    "
  poetry install {posargs} -vvv

list_dependencies_command = python -c "print(' -------------- O -------------- ')"

[testenv:format]
description = "Reformat code using isort,autopep8,black formatter(s)"
commands =
  autopep8 --in-place --recursive laholio
  python -m black laholio
  isort -rc --atomic laholio
  docformatter \
    --in-place \
    --recursive \
    --wrap-summaries 0 \
    --blank \
    laholio

todo = remove

[testenv:flake8]
description = "Lint code using flake8"
commands =
  flake8 --config=tox.ini laholio

[testenv:mypy]
description = "Lint code using mypy"
commands =
  mypy --config-file=tox.ini -p laholio

[testenv:bandit]
description = "Lint code using bandit"
commands =
  bandit --ini=tox.ini --quiet --recursive laholio

[testenv:pylint]
description = "Lint code using pylint"
commands =
  pylint --rcfile=tox.ini laholio


[testenv:lint]
description = "Lint code using flake8,pylint,mypy,bandit linter"
whitelist_externals = tox
commands =
  - {[testenv:flake8]commands}
  - {[testenv:mypy]commands}
  - {[testenv:bandit]commands}
  - {[testenv:pylint]commands}

[testenv:unit]
description = "Execute unit tests"
commands_pre = 
  docker-compose -f docker/development/docker-compose.yml --project-directory docker/development/ up -d elasticsearch
commands = 
  python docker/development/wait_for_elastic.py
  pytest tests {posargs}
commands_post =
  docker-compose -f docker/development/docker-compose.yml --project-directory docker/development/ down


[testenv:venv]
recreate = False
description = "Install dependencies for application dev, w/o running tests"
